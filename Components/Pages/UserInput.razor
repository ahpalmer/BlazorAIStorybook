@page "/userInput"
@inject NavigationManager NavigationManager
@inject HeroProfileService HeroProfileService
@inject IJSRuntime JSRuntime
@using BlazorAIStorybook.Core.Models
@using BlazorAIStorybook.Core.Services

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Character Details</h3>
                </div>
                <div class="card-body">
                    <EditForm Model="@heroProfile" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <InputText id="nameInput" @bind-Value="heroProfile.HeroName" class="form-control" placeholder="Enter your name" />
                            <ValidationMessage For="@(() => heroProfile.HeroName)" />
                        </div>

                        <div class="mb-3">
                            <label for="eyeColor" class="form-label">Eye Color</label>
                            <InputSelect id="eyeColorInput" @bind-Value="heroProfile.EyeColor" class="form-select">
                                <option value="">-- Select Eye Color --</option>
                                <option value="Blue">Blue</option>
                                <option value="Brown">Brown</option>
                                <option value="Green">Green</option>
                                <option value="Hazel">Hazel</option>
                                <option value="Gray">Gray</option>
                                <option value="Amber">Amber</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => heroProfile.EyeColor)" />
                        </div>

                        <div class="mb-3">
                            <label for="hairColor" class="form-label">Hair Color</label>
                            <InputSelect id="hairColorInput" @bind-Value="heroProfile.HairColor" class="form-select">
                                <option value="">-- Select Hair Color --</option>
                                <option value="Black">Black</option>
                                <option value="Brown">Brown</option>
                                <option value="Blonde">Blonde</option>
                                <option value="Red">Red</option>
                                <option value="Gray">Gray</option>
                                <option value="White">White</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => heroProfile.HairColor)" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">Submit Form</button>
                        </div>
                    </EditForm>
                    
                    <hr />
                    
                   @*  <div class="mt-4">
                        <h5>Alternative Options:</h5>
                        <p>
                            <a href="/image?name=Sarah&eyeColor=Green&hairColor=Red" class="btn btn-outline-primary">
                                Go to Image with Sarah
                            </a>
                        </p>
                        <p>
                            <a href="/UserInputTest.html" class="btn btn-outline-secondary">
                                Try Plain HTML Form
                            </a>
                        </p>
                    </div> *@
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private HeroProfile heroProfile = new HeroProfile("", "", "");

    private void HandleValidSubmit()
    {
        HeroProfileService.CurrentHero = heroProfile;

        NavigationManager.NavigateTo("/image");
    }
}