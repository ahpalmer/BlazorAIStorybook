@page "/image"
@inject NavigationManager NavigationManager
@inject HeroProfileService HeroProfileService
@inject IJSRuntime JSRuntime
@using BlazorAIStorybook.Core.Models
@using BlazorAIStorybook.Core.Services
@implements IDisposable

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h3 class="mb-0">Character Image</h3>
                </div>
                <div class="card-body">
                    @if (hero != null && !string.IsNullOrEmpty(hero.HeroName))
                    {
                        <div class="text-center mb-4">
                            <h2>@hero.HeroName</h2>
                            <div class="badge bg-info me-2">Eyes: @hero.EyeColor</div>
                            <div class="badge bg-info">Hair: @hero.HairColor</div>
                        </div>

                        <div class="text-center">
                            <div class="character-image-placeholder p-5 bg-light border rounded mb-3">
                                <p class="mb-2">Character with:</p>
                                <ul class="list-unstyled">
                                    <li><strong>Name:</strong> @hero.HeroName</li>
                                    <li><strong>Eye Color:</strong> @hero.EyeColor</li>
                                    <li><strong>Hair Color:</strong> @hero.HairColor</li>
                                </ul>
                                <div style="width:200px; height:200px; background-color:#f0f0f0; margin:0 auto; border-radius:50%; position:relative;" class="mt-3">
                                    <div style="width:50px; height:50px; border-radius:50%; background-color:@GetEyeColorCode(hero.EyeColor); position:absolute; top:60px; left:40px;"></div>
                                    <div style="width:50px; height:50px; border-radius:50%; background-color:@GetEyeColorCode(hero.EyeColor); position:absolute; top:60px; right:40px;"></div>
                                    <div style="width:80px; height:20px; border-radius:10px; background-color:#888; position:absolute; top:130px; left:60px;"></div>
                                    <div style="width:200px; height:80px; border-radius:100px 100px 0 0; background-color:@GetHairColorCode(hero.HairColor); position:absolute; top:-10px;"></div>
                                </div>
                            </div>
                        </div>

                        <div class="d-grid gap-2">
                            <a href="/userInput" class="btn btn-primary">Create Another Character</a>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning">
                            <p>No character details found. Please go back and create a character.</p>
                            <a href="/userInput" class="btn btn-primary">Go to Character Creator</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private HeroProfile? hero;

    protected override void OnInitialized()
    {
        hero = HeroProfileService.CurrentHero;
        HeroProfileService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        HeroProfileService.OnChange -= StateHasChanged;
    }

    private string GetEyeColorCode(string? eyeColor)
    {
        return eyeColor?.ToLower() switch
        {
            "blue" => "#3498db",
            "brown" => "#8B4513",
            "green" => "#2ecc71",
            "hazel" => "#D2B48C",
            "gray" => "#7f8c8d",
            "amber" => "#FF7F50",
            _ => "#000000"
        };
    }

    private string GetHairColorCode(string? hairColor)
    {
        return hairColor?.ToLower() switch
        {
            "black" => "#2c3e50",
            "brown" => "#8B4513",
            "blonde" => "#f1c40f",
            "red" => "#e74c3c",
            "gray" => "#95a5a6",
            "white" => "#ecf0f1",
            _ => "#000000"
        };
    }
}